CREATE TABLE IF NOT EXISTS "user" (id uuid PRIMARY KEY, "name" TEXT NULL, username TEXT NOT NULL, hashed_password TEXT NOT NULL, salt TEXT NOT NULL, email TEXT NULL, roles TEXT[] NOT NULL, avatar_url TEXT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL);
CREATE TABLE IF NOT EXISTS refresh_token (id BIGSERIAL PRIMARY KEY, user_id uuid NOT NULL, token TEXT NOT NULL, created_at BIGINT NOT NULL, ttl INT NOT NULL, issuer TEXT NOT NULL, CONSTRAINT fk_refresh_token_user_id__id FOREIGN KEY (user_id) REFERENCES "user"(id) ON DELETE CASCADE ON UPDATE RESTRICT);
CREATE TABLE IF NOT EXISTS example (id BIGSERIAL PRIMARY KEY, user_id uuid NOT NULL, symtrix TEXT NOT NULL, CONSTRAINT fk_example_user_id__id FOREIGN KEY (user_id) REFERENCES "user"(id) ON DELETE CASCADE ON UPDATE RESTRICT);
CREATE TABLE IF NOT EXISTS step (id uuid PRIMARY KEY, user_id uuid NOT NULL, "label" TEXT NOT NULL, description TEXT NULL, img_url TEXT NULL, thumb_url TEXT NULL, audio_url TEXT NULL, is_public BOOLEAN DEFAULT FALSE NOT NULL, expected_mins INT NULL, path_size INT NOT NULL, created_at TIMESTAMP NOT NULL, edited_at TIMESTAMP NOT NULL, CONSTRAINT fk_step_user_id__id FOREIGN KEY (user_id) REFERENCES "user"(id) ON DELETE CASCADE ON UPDATE RESTRICT);
CREATE TABLE IF NOT EXISTS step_position (id uuid PRIMARY KEY, parent_id uuid NOT NULL, step_id uuid NOT NULL, "position" INT NOT NULL, CONSTRAINT fk_step_position_parent_id__id FOREIGN KEY (parent_id) REFERENCES step(id) ON DELETE CASCADE ON UPDATE RESTRICT, CONSTRAINT fk_step_position_step_id__id FOREIGN KEY (step_id) REFERENCES step(id) ON DELETE CASCADE ON UPDATE RESTRICT);
ALTER TABLE step_position ADD CONSTRAINT step_position_parent_id_position_unique UNIQUE (parent_id, "position");
CREATE TABLE IF NOT EXISTS intent (id uuid PRIMARY KEY, user_id uuid NOT NULL, root_step_id uuid NOT NULL, "label" TEXT NOT NULL, repeat_mins INT NULL, expected_mins INT NULL, path_ids TEXT[] NOT NULL, completed_at TIMESTAMP NULL, "scheduled_At" TIMESTAMP NULL, CONSTRAINT fk_intent_user_id__id FOREIGN KEY (user_id) REFERENCES "user"(id) ON DELETE CASCADE ON UPDATE RESTRICT, CONSTRAINT fk_intent_root_step_id__id FOREIGN KEY (root_step_id) REFERENCES step(id) ON DELETE CASCADE ON UPDATE RESTRICT);
CREATE TABLE IF NOT EXISTS trek (id uuid PRIMARY KEY, user_id uuid NOT NULL, quest_id uuid NOT NULL, root_id uuid NOT NULL, step_id uuid NOT NULL, step_index INT NOT NULL, step_count INT NOT NULL, path_ids TEXT[] NOT NULL, bread_crumbs TEXT[] NOT NULL, available_at TIMESTAMP NOT NULL, started_at TIMESTAMP NULL, progress_at TIMESTAMP NULL, finished_at TIMESTAMP NULL, expected_at TIMESTAMP NULL, CONSTRAINT fk_trek_user_id__id FOREIGN KEY (user_id) REFERENCES "user"(id) ON DELETE CASCADE ON UPDATE RESTRICT, CONSTRAINT fk_trek_quest_id__id FOREIGN KEY (quest_id) REFERENCES intent(id) ON DELETE CASCADE ON UPDATE RESTRICT, CONSTRAINT fk_trek_root_id__id FOREIGN KEY (root_id) REFERENCES step(id) ON DELETE CASCADE ON UPDATE RESTRICT, CONSTRAINT fk_trek_step_id__id FOREIGN KEY (step_id) REFERENCES step(id) ON DELETE CASCADE ON UPDATE RESTRICT);
CREATE SEQUENCE IF NOT EXISTS refresh_token_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS example_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
